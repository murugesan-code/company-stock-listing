/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.stock.api;

import com.stock.model.StockPrice;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-12-05T17:02:04.651+05:30[Asia/Kolkata]")
@Validated
@Api(value = "Stock", description = "the Stock API")
public interface StockApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/v1.0/market/stock/add/{companyCode} : Add new stock price
     *
     * @param companyCode Company code needs to be associated with stock price (required)
     * @param stockPrice Stockprice payload (optional)
     * @return Created stock price succcessfully (status code 200)
     */
    @ApiOperation(value = "Add new stock price", nickname = "createStockPrice", notes = "", response = String.class, tags={ "Stock", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Created stock price succcessfully", response = String.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1.0/market/stock/add/{companyCode}",
        produces = { "text/plain" },
        consumes = { "application/json" }
    )
    default ResponseEntity<String> createStockPrice(@ApiParam(value = "Company code needs to be associated with stock price", required = true) @PathVariable("companyCode") String companyCode,@ApiParam(value = "Stockprice payload") @Valid @RequestBody(required = false) StockPrice stockPrice) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /api/v1.0/market/stock/delete/{companyCode} : Delete stock price
     *
     * @param companyCode Company code passed (required)
     * @return Deleted stock price succcessfully (status code 200)
     */
    @ApiOperation(value = "Delete stock price", nickname = "deleteStockPrice", notes = "", tags={ "Stock", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Deleted stock price succcessfully") })
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/api/v1.0/market/stock/delete/{companyCode}"
    )
    default ResponseEntity<Void> deleteStockPrice(@ApiParam(value = "Company code passed", required = true) @PathVariable("companyCode") String companyCode) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1.0/market/stock/getall/{companyCode} : Get stock price
     *
     * @param companyCode Company code passed (required)
     * @return Created stock price succcessfully (status code 200)
     */
    @ApiOperation(value = "Get stock price", nickname = "getAllStockPrice", notes = "", response = StockPrice.class, responseContainer = "List", tags={ "Stock", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Created stock price succcessfully", response = StockPrice.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1.0/market/stock/getall/{companyCode}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<StockPrice>> getAllStockPrice(@ApiParam(value = "Company code passed", required = true) @PathVariable("companyCode") String companyCode) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"endDate\" : \"2021-01-30T00:00:00.000+0000\", \"id\" : 0, \"stockPrice\" : \"\", \"startDate\" : \"2021-01-30T00:00:00.000+0000\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
